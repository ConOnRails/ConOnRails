# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Ruby.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
stages:
  - test
  - lint

image: ruby:2.7

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: https://docs.gitlab.com/ee/ci/services/index.html
services:
  - postgres:15.1

variables:
  POSTGRES_DB: con_on_rails_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_HOST_AUTH_METHOD: trust
  DB_HOST: postgres

# Cache gems in between builds
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor/ruby

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - ruby -v  # Print out ruby version for debugging
  # Uncomment next line if your rails app needs a JS runtime:
  - apt-get update -q && apt-get install nodejs -yqq
  - gem install bundler
  - bundle config set --local path 'vendor/ruby' # Install dependencies into ./vendor/ruby
  - bundle install -j $(nproc)
  - cp config/database.gitlab-ci.yml config/database.yml
  - bundle exec rails db:test:prepare

# Optional - Delete if not using `rubocop`
rubocop:
  stage: lint
  script:
    - bundle exec rubocop

rails:
  stage: test
  script:
    - bundle exec rake test -d

# This deploy job uses a simple deploy flow to Heroku, other providers, e.g. AWS Elastic Beanstalk
# are supported too: https://github.com/travis-ci/dpl
#deploy:
#  stage: deploy
#  environment: production
#  script:
#    - gem install dpl
#    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
